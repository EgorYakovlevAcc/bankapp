Index: src/main/java/com/example/demo/models/DisconnectOrder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/example/demo/models/DisconnectOrder.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
+++ src/main/java/com/example/demo/models/DisconnectOrder.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
@@ -0,0 +1,70 @@
+package com.example.demo.models;
+
+import org.hibernate.annotations.OnDelete;
+import org.hibernate.annotations.OnDeleteAction;
+
+import javax.persistence.*;
+import java.util.List;
+
+@Entity
+@Table(name = "disconnectorders")
+public class DisconnectOrder {
+    @Id
+    @GeneratedValue(strategy = GenerationType.AUTO)
+
+    private Integer id;
+    private User customer;
+    private Instance instance;
+    private String msisdn;
+
+    public NewModifyOrder() {
+    }
+
+    public NewModifyOrder(Integer id, User customer, String msisdn, Instance instance) {
+        this.id = id;
+        this.customer = customer;
+        this.msisdn = msisdn;
+        this.instance = instance;
+    }
+
+    public Integer getId() {
+        return id;
+    }
+
+    public void setId(Integer id) {
+        this.id = id;
+    }
+
+    public String getMsisdn() {
+        return msisdn;
+    }
+
+    public void setMsisdn(String msisdn) {
+        this.msisdn = msisdn;
+    }
+
+    public User getCustomer() {
+        return customer;
+    }
+
+    public void setCustomer(User customer) {
+        this.customer = customer;
+    }
+
+    public Instance getInstance() {
+        return instance;
+    }
+
+    public void setInstance() {
+        this.instance = instance;
+    }
+
+    @Override
+    public String toString() {
+        return "NewModifyOrder {" +
+                "id=" + id +
+                ", msisdn=" + msisdn +
+                ", instance='" + instance + '\'' +
+                '}';
+    }
+}
\ No newline at end of file
Index: src/main/java/com/example/demo/models/Instance.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/example/demo/models/Instance.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
+++ src/main/java/com/example/demo/models/Instance.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
@@ -0,0 +1,4 @@
+package com.example.demo.models;
+
+public abstract class Instance {
+}
Index: src/main/java/com/example/demo/models/NewModifyOrder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/example/demo/models/NewModifyOrder.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
+++ src/main/java/com/example/demo/models/NewModifyOrder.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
@@ -0,0 +1,66 @@
+package com.example.demo.models;
+
+import org.hibernate.annotations.OnDelete;
+import org.hibernate.annotations.OnDeleteAction;
+
+import javax.persistence.*;
+import java.util.List;
+
+@Entity
+@Table(name = "newmodifyorders")
+public class NewModifyOrder {
+    @Id
+    @GeneratedValue(strategy = GenerationType.AUTO)
+
+    private Integer id;
+    private User customer;
+    private Instance instance;
+    private String msisdn;
+
+    public NewModifyOrder(){
+    }
+
+    public NewModifyOrder(Integer id, User customer, String msisdn, Instance instance) {
+        this.id = id;
+        this.customer = customer;
+        this.msisdn = msisdn;
+        this.instance = instance;
+    }
+
+    public Integer getId() {
+        return id;
+    }
+
+    public void setId(Integer id) {
+        this.id = id;
+    }
+
+    public String getMsisdn() {
+        return msisdn;
+    }
+
+    public void setMsisdn( String msisdn ) {
+        this.msisdn = msisdn;
+    }
+
+    public User getCustomer() {
+        return customer;
+    }
+
+    public void setCustomer(User customer ) {
+        this.customer = customer;
+    }
+
+    public Instance getInstance(){ return instance;}
+
+    public void setInstance(){ this.instance = instance; }
+
+    @Override
+    public String toString() {
+        return "NewModifyOrder {" +
+                "id=" + id +
+                ", msisdn=" + msisdn +
+                ", instance='" + instance + '\'' +
+                '}';
+    }
+}
Index: src/main/java/com/example/demo/models/Order.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/example/demo/models/Order.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
+++ src/main/java/com/example/demo/models/Order.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
@@ -0,0 +1,4 @@
+package com.example.demo.models;
+
+public abstract class Order {
+}
Index: src/main/java/com/example/demo/repos/DisconnectOrderRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/example/demo/repos/DisconnectOrderRepository.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
+++ src/main/java/com/example/demo/repos/DisconnectOrderRepository.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
@@ -0,0 +1,16 @@
+package com.example.demo.repos;
+
+import com.example.demo.models.DisconnectOrder;
+import com.example.demo.models.Order;
+import com.example.demo.models.User;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
+
+import java.util.List;
+
+@Repository
+public interface DisconnectOrderRepository extends JpaRepository<DisconnectOrder, Integer> {
+    DisconnectOrder findDisconnectOrderstById(Integer id);
+    void deleteDisconnectOrderById(Integer id);
+    List<User> findBillsByUser(User user);
+}
\ No newline at end of file
Index: src/main/java/com/example/demo/repos/InstanceRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/example/demo/repos/InstanceRepository.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
+++ src/main/java/com/example/demo/repos/InstanceRepository.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
@@ -0,0 +1,4 @@
+package com.example.demo.repos;
+
+public interface InstanceRepository {
+}
Index: src/main/java/com/example/demo/repos/NewModifyOrderRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/example/demo/repos/NewModifyOrderRepository.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
+++ src/main/java/com/example/demo/repos/NewModifyOrderRepository.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
@@ -0,0 +1,17 @@
+package com.example.demo.repos;
+
+import com.example.demo.models.DisconnectOrder;
+import com.example.demo.models.NewModifyOrder;
+import com.example.demo.models.Order;
+import com.example.demo.models.User;
+import org.springframework.data.jpa.repository.JpaRepository;
+import org.springframework.stereotype.Repository;
+
+import java.util.List;
+
+@Repository
+public interface NewModifyOrderRepository extends JpaRepository<NewModifyOrder, Integer> {
+    NewModifyOrder findNewModifyOrderstById(Integer id);
+    void deleteNewModifyOrderById(Integer id);
+    List<User> findNewModifyOrdersByUser(User user);
+}
\ No newline at end of file
Index: src/main/java/com/example/demo/repos/OrderRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/example/demo/repos/OrderRepository.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
+++ src/main/java/com/example/demo/repos/OrderRepository.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
@@ -0,0 +1,4 @@
+package com.example.demo.repos;
+
+public interface OrderRepository {
+}
Index: src/main/java/com/example/demo/service/DisconnectOrderService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/example/demo/service/DisconnectOrderService.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
+++ src/main/java/com/example/demo/service/DisconnectOrderService.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
@@ -0,0 +1,16 @@
+package com.example.demo.service;
+
+import com.example.demo.models.DisconnectOrder;
+import com.example.demo.models.Order;
+import com.example.demo.models.User;
+
+import java.util.List;
+
+public interface DisconnectOrderService {
+    DisconnectOrder findDisconnectOrderById(Integer id);
+    List<User> findDisconnectOrdersByUser(User user);
+    List<User> findDisconnectOrdersByUsername(String username);
+    void save(DisconnectOrder disconnectorder);
+    void deleteDisconnectOrderById(Integer id);
+    List<DisconnectOrder> allDisconnectOrders();
+}
Index: src/main/java/com/example/demo/service/DisconnectOrderServicelmpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/example/demo/service/DisconnectOrderServicelmpl.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
+++ src/main/java/com/example/demo/service/DisconnectOrderServicelmpl.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
@@ -0,0 +1,49 @@
+package com.example.demo.service;
+
+import com.example.demo.models.DisconnectOrder;
+import com.example.demo.models.Order;
+import com.example.demo.models.User;
+import com.example.demo.repos.DisconnectOrderRepository;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+
+import java.util.List;
+
+@Service
+@Transactional
+public class DisconnectOrderServicelmpl implements DisconnectOrderService {
+    @Autowired
+    private DisconnectOrderRepository disconnectorderRepository;
+
+    @Override
+    public DisconnectOrder findDisconnectOrderById(Integer id) {
+        return disconnectorderRepository.findDisconnectOrderById(id);
+    }
+
+    @Override
+    public List<User> findDisconnectOrdersByUser(User user) {
+        return disconnectorderRepository.findBillsByUser(user);
+    }
+
+    @Override
+    public List<User> findDisconnectOrdersByUsername(String username) {
+        return null;
+    }
+
+    @Override
+    public void save(DisconnectOrder bill) {
+        disconnectorderRepository.save(bill);
+    }
+
+    @Override
+    public void deleteDisconnectOrderById(Integer id) {
+        disconnectorderRepository.deleteDisconnectOrderById(id);
+    }
+
+    @Override
+    public List<DisconnectOrder> allDisconnectOrders() {
+        return disconnectorderRepository.findAll();
+    }
+}
+
Index: src/main/java/com/example/demo/service/InstanceService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/example/demo/service/InstanceService.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
+++ src/main/java/com/example/demo/service/InstanceService.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
@@ -0,0 +1,4 @@
+package com.example.demo.service;
+
+public interface InstanceService {
+}
Index: src/main/java/com/example/demo/service/InstanceServicelmpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/example/demo/service/InstanceServicelmpl.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
+++ src/main/java/com/example/demo/service/InstanceServicelmpl.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
@@ -0,0 +1,4 @@
+package com.example.demo.service;
+
+public class InstanceServicelmpl {
+}
Index: src/main/java/com/example/demo/service/NewModifyOrderService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/example/demo/service/NewModifyOrderService.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
+++ src/main/java/com/example/demo/service/NewModifyOrderService.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
@@ -0,0 +1,16 @@
+package com.example.demo.service;
+
+import com.example.demo.models.NewModifyOrder;
+import com.example.demo.models.Order;
+import com.example.demo.models.User;
+
+import java.util.List;
+
+public interface NewModifyOrderService {
+    NewModifyOrder findNewModifyOrderById(Integer id);
+    List<User> findNewModifyOrdersByUser(User user);
+    List<User> findNewModifyOrdersByUsername(String username);
+    void save(NewModifyOrder newmodifyorder);
+    void deleteNewModifyOrderById(Integer id);
+    List<NewModifyOrder> allNewModifyOrders();
+}
\ No newline at end of file
Index: src/main/java/com/example/demo/service/NewModifyOrderServicelmpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/example/demo/service/NewModifyOrderServicelmpl.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
+++ src/main/java/com/example/demo/service/NewModifyOrderServicelmpl.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
@@ -0,0 +1,47 @@
+package com.example.demo.service;
+
+import com.example.demo.models.User;
+import com.example.demo.repos.NewModifyOrderRepository;
+import org.springframework.beans.factory.annotation.Autowired;
+import org.springframework.stereotype.Service;
+import org.springframework.transaction.annotation.Transactional;
+
+import java.util.List;
+
+@Service
+@Transactional
+public class NewModifyOrderServiceImpl implements NewModifyOrderService {
+    @Autowired
+    private NewModifyOrderRepository billRepository;
+
+    @Override
+    public Bill findBillById(Integer id) {
+        return billRepository.findBillById(id);
+    }
+
+    @Override
+    public List<User> findBillsByUser(User user) {
+        return billRepository.findBillsByUser(user);
+    }
+
+    @Override
+    public List<User> findBillsByUsername(String username) {
+        return null;
+    }
+
+    @Override
+    public void save(Bill bill) {
+        billRepository.save(bill);
+    }
+
+    @Override
+    public void deleteBillById(Integer id) {
+        billRepository.deleteBillById(id);
+    }
+
+    @Override
+    public List<Bill> allBills() {
+        return billRepository.findAll();
+    }
+}
+
Index: src/main/java/com/example/demo/service/OrderService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/example/demo/service/OrderService.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
+++ src/main/java/com/example/demo/service/OrderService.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
@@ -0,0 +1,4 @@
+package com.example.demo.service;
+
+public interface OrderService {
+}
Index: src/main/java/com/example/demo/service/OrderServicelmpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/com/example/demo/service/OrderServicelmpl.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
+++ src/main/java/com/example/demo/service/OrderServicelmpl.java	(revision 8861f873d2aadd451551edc5f6ce35816d5c5d59)
@@ -0,0 +1,4 @@
+package com.example.demo.service;
+
+public class OrderServicelmpl {
+}
